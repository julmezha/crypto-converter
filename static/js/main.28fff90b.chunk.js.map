{"version":3,"sources":["components/ExchangeRate.js","components/CurrencyConverter.js","App.js","index.js"],"names":["ExchangeRate","_ref","exchangeRate","chosenPrimaryCurrency","chosenSecondaryCurrency","react_default","a","createElement","className","CurrencyConverter","currencies","_useState","useState","_useState2","Object","slicedToArray","setChosenPrimaryCurrency","_useState3","_useState4","setChosenSecondaryCurrency","_useState5","_useState6","amount","setAmount","_useState7","_useState8","setExchangeRate","_useState9","_useState10","result","setResult","type","name","value","onChange","e","target","map","currency","_index","key","disabled","class","id","onClick","options","method","url","params","from_currency","function","to_currency","axios","request","then","response","console","log","data","catch","error","components_ExchangeRate","App","Container","components_CurrencyConverter","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"8NAmBeA,EAjBM,SAAAC,GAIf,IAHJC,EAGID,EAHJC,aACAC,EAEIF,EAFJE,sBACAC,EACIH,EADJG,wBAEA,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAKL,GACLG,EAAAC,EAAAC,cAAA,SACGJ,EADH,OAC8BC,GAE7BF,IC8FQO,EAtGW,WACxB,IAAMC,EAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OADzBC,EAE4BC,mBAAS,OAFrCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEvBR,EAFuBU,EAAA,GAEAG,EAFAH,EAAA,GAAAI,EAGgCL,mBAAS,OAHzCM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAGvBb,EAHuBc,EAAA,GAGEC,EAHFD,EAAA,GAAAE,EAIFR,mBAAS,GAJPS,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAIvBE,EAJuBD,EAAA,GAIfE,EAJeF,EAAA,GAAAG,EAKUZ,mBAAS,GALnBa,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAKvBtB,EALuBuB,EAAA,GAKTC,EALSD,EAAA,GAAAE,EAMFf,mBAAS,GANPgB,EAAAd,OAAAC,EAAA,EAAAD,CAAAa,EAAA,GAMvBE,EANuBD,EAAA,GAMfE,EANeF,EAAA,GA8B9B,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,oCAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEwB,KAAK,SACLC,KAAK,oBACLC,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAAUY,EAAEC,OAAOH,WAGxC5B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACE0B,MAAO9B,EACP6B,KAAK,oBACLxB,UAAU,mBACV0B,SAAU,SAACC,GAAD,OAAOnB,EAAyBmB,EAAEC,OAAOH,SAElDvB,EAAW2B,IAAI,SAACC,EAAUC,GAAX,OACdlC,EAAAC,EAAAC,cAAA,UAAQiC,IAAKD,GAASD,QAM9BjC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEwB,KAAK,SACLC,KAAK,oBACLC,MAAOJ,EACPY,UAAU,KAGdpC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACE0B,MAAO7B,EACP4B,KAAK,oBACLxB,UAAU,mBACV0B,SAAU,SAACC,GAAD,OAAOhB,EAA2BgB,EAAEC,OAAOH,SAEpDvB,EAAW2B,IAAI,SAACC,EAAUC,GAAX,OACdlC,EAAAC,EAAAC,cAAA,UAAQiC,IAAKD,GAASD,UASlCjC,EAAAC,EAAAC,cAAA,UAAQwB,KAAK,SAASW,MAAM,sCAAsCC,GAAG,iBAAiBC,QAhF5E,WACd,IAAMC,EAAU,CACdC,OAAQ,MACRC,IAAK,+CACLC,OAAQ,CACNC,cAAe9C,EAAuB+C,SAAU,yBAA0BC,YAAa/C,IAI3FgD,IAAMC,QAAQR,GAASS,KAAK,SAACC,GAC3BC,QAAQC,IAAIF,EAASG,MACrB5B,EAAUyB,EAASG,KAAOpC,GAE1BI,EAAgB6B,EAASG,QAIxBC,MAAM,SAACC,GACNJ,QAAQI,MAAMA,OA8Dd,UAKFvD,EAAAC,EAAAC,cAACsD,EAAD,CACE3D,aAAcA,EACdC,sBAAuBA,EACvBC,wBAAyBA,sBCxFlB0D,EATH,WACV,OACEzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAWvD,UAAU,OACnBH,EAAAC,EAAAC,cAACyD,EAAD,MADF,uBCDSC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhE,EAAAC,EAAAC,cAACF,EAAAC,EAAMgE,WAAP,KACEjE,EAAAC,EAAAC,cAACgE,EAAD","file":"static/js/main.28fff90b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ExchangeRate = ({\r\n  exchangeRate,\r\n  chosenPrimaryCurrency,\r\n  chosenSecondaryCurrency,\r\n}) => {\r\n  return (\r\n    <div className=\"exchange-rate\">\r\n      <h3>Vaihtokurssi</h3>\r\n      <h1>{exchangeRate}</h1>\r\n      <p>\r\n        {chosenPrimaryCurrency} on {chosenSecondaryCurrency}\r\n      </p>\r\n      {exchangeRate}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExchangeRate;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ExchangeRate from \"./ExchangeRate\";\r\n\r\n\r\nconst CurrencyConverter = () => {\r\n  const currencies = [\"BTC\", \"ETH\", \"USD\", \"LTC\", \"XRP\", \"ADA\"];\r\n  const [chosenPrimaryCurrency, setChosenPrimaryCurrency] = useState(\"BTC\");\r\n  const [chosenSecondaryCurrency, setChosenSecondaryCurrency] = useState(\"USD\");\r\n  const [amount, setAmount] = useState(1);\r\n  const [exchangeRate, setExchangeRate] = useState(0);\r\n  const [result, setResult] = useState(0);\r\n\r\n  const convert = () => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://julmezha.github.io/crypto-converter/\",\r\n      params: {\r\n        from_currency: chosenPrimaryCurrency, function: \"CURRENCY_EXCHANGE_RATE\", to_currency: chosenSecondaryCurrency\r\n      }\r\n    }\r\n\r\n    axios.request(options).then((response) => {\r\n      console.log(response.data)\r\n      setResult(response.data * amount)\r\n\r\n      setExchangeRate(response.data)\r\n\r\n\r\n    })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"currency-converter\">\r\n      <h2>Kryptovaluutta-laskuri</h2>\r\n\r\n      <div className=\"input-box\">\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Valuutta: </td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"currency-amount-1\"\r\n                  value={amount}\r\n                  onChange={(e) => setAmount(e.target.value)}\r\n                />\r\n              </td>\r\n              <td>\r\n                <select\r\n                  value={chosenPrimaryCurrency} //showing visuals right\r\n                  name=\"currency-option-1\"\r\n                  className=\"currency-options\"\r\n                  onChange={(e) => setChosenPrimaryCurrency(e.target.value)}\r\n                >\r\n                  {currencies.map((currency, _index) => (\r\n                    <option key={_index}>{currency}</option>\r\n                  ))}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>Yhteens√§: </td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"currency-amount-2\"\r\n                  value={result}\r\n                  disabled={true}\r\n                />\r\n              </td>\r\n              <td>\r\n                <select\r\n                  value={chosenSecondaryCurrency}\r\n                  name=\"currency-option-2\"\r\n                  className=\"currency-options\"\r\n                  onChange={(e) => setChosenSecondaryCurrency(e.target.value)}\r\n                >\r\n                  {currencies.map((currency, _index) => (\r\n                    <option key={_index}>{currency}</option>\r\n                  ))}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n\r\n        <button type=\"Button\" class=\"btn btn-secondary btn-sm btn-block \" id=\"convert-button\" onClick={convert}>\r\n          Laske\r\n        </button>\r\n      </div>\r\n\r\n      <ExchangeRate\r\n        exchangeRate={exchangeRate}\r\n        chosenPrimaryCurrency={chosenPrimaryCurrency}\r\n        chosenSecondaryCurrency={chosenSecondaryCurrency}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyConverter;\r\n","import React from 'react';\nimport CurrencyConverter from \"./components/CurrencyConverter\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\n\nconst App = () => {\n  return (\n    <Container className='app'>\n      <CurrencyConverter />\n      made by 0xjulmezha\n    </Container>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}